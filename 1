diff --git a/README.md b/README.md
index 96628cc..a33df0f 100644
--- a/README.md
+++ b/README.md
@@ -156,3 +156,10 @@ First release of v2.
 #### Features
 
 * 支持队列清理功能
+
+### 2.4.7
+#### Features
+
+* 从redis中取出的job在写入beanstalkd时如果发生JOB_TOO_BIG错误, 则不重新放回到redis(防止死循环).
+* 修复队列清理功能bug, 解决清理特定的通道时, 如果该通道一直有大量的数据流入, 导致清理操作无法终止的问题.
+
diff --git a/config/setupconfig.go b/config/setupconfig.go
index 2118426..5577c89 100644
--- a/config/setupconfig.go
+++ b/config/setupconfig.go
@@ -16,7 +16,7 @@ var BuildTime = "unknonw"
 var GitHash = ""
 
 const (
-	VerNo           = "2.4.6"
+	VerNo           = "2.4.7"
 	MAX_CONNECTIONS = 15000
 	// 客户端响应超时
 	CLIENT_TIMEOUT  = time.Second * 5
diff --git a/rpc/handlers/clean_topic.go b/rpc/handlers/clean_topic.go
index 02e8eb3..f4f4228 100644
--- a/rpc/handlers/clean_topic.go
+++ b/rpc/handlers/clean_topic.go
@@ -152,7 +152,15 @@ func (self CleanQueue) Process(args map[string]interface{}) (interface{}, error)
 				}
 
 				go func() {
+					t := time.NewTimer(time.Minute * 5)
 					for {
+						select {
+						case <-t.C:
+							log.Infof("清理操作超时, 终止队列清理操作: %v ===> %v", host, topic)
+							return
+						default:
+						}
+
 						if isServerStopping() {
 							log.Infof("进程即将退出, 终止队列清理操作: %v ===> %v", host, topic)
 							return
